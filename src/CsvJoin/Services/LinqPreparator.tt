<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ include file="$(ProjectDir)TextTemplates.Includes\LoadTables.ttinclude" #>
<#@ output extension=".cs" #>
<#
    var tables = LoadTables(Host);
   
    var commonColumns = tables[0].Columns.Intersect(tables[1].Columns)
        .ToArray();
    var joinedColumns = tables[0].Columns.Union(tables[1].Columns).ToArray();
#>
// <auto-generated />
using CsvJoin.Models;
using CsvJoin.Services.Abstractions;
using System.Collections.Generic;
using System.Linq;

namespace CsvJoin.Services
{
    public class LinqPreparator : ILinqPreparator
    {
        public IEnumerable<dynamic> PrepareLeftJoinLinq(
            IEnumerable<Csv1> csv1s,
            IEnumerable<Csv2> csv2s)
        {
            return from csv1 in csv1s
                   join csv2 in csv2s
                   on new
                   {
<#
	foreach (var commonColumn in commonColumns)
	{
#>
                       <#= string.Format("{0}.{1}",
                               tables[0].Name,
                               commonColumn.Name) #>,
<#
	}
#>
                   }
                   equals new
                   {
<#
	foreach (var commonColumn in commonColumns)
	{
#>
                       <#= string.Format("{0}.{1}",
                               tables[1].Name,
                               commonColumn.Name) #>,
<#
	}
#>
                   }
                   into gj
                   from csv2 in gj.DefaultIfEmpty()
                   select new
                   {
<#
	foreach (var joinedColumn in joinedColumns)
	{
#>
                       <#= string.Format("{0}.{1}",
                               tables[0].Columns.Contains(joinedColumn)
                                   ? tables[0].Name
                                   : tables[1].Name + '?',
                               joinedColumn.Name) #>,
<#
	}
#>
                   };
        }

        public IEnumerable<dynamic> PrepareJoinLinq(
            IEnumerable<Csv1> csv1s,
            IEnumerable<Csv2> csv2s)
        {
            return from csv1 in csv1s
                   join csv2 in csv2s
                   on new
                   {
<#
	foreach (var commonColumn in commonColumns)
	{
#>
                       <#= string.Format("{0}.{1}",
                               tables[0].Name,
                               commonColumn.Name) #>,
<#
	}
#>
                   }
                   equals new
                   {
<#
	foreach (var commonColumn in commonColumns)
	{
#>
                       <#= string.Format("{0}.{1}",
                               tables[1].Name,
                               commonColumn.Name) #>,
<#
	}
#>
                   }
                   select new
                   {
<#
	foreach (var joinedColumn in joinedColumns)
	{
#>
                       <#= string.Format("{0}.{1}",
                               tables[0].Columns.Contains(joinedColumn) 
                                   ? tables[0].Name
                                   : tables[1].Name,
                               joinedColumn.Name) #>,
<#
	}
#>
                   };
        }
    }
}